{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\enzos\\\\OneDrive\\\\Ambiente de Trabalho\\\\Breno\\\\Github\\\\pokedex-subvisual\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Pokemon } from \"./Pokemon\";\nimport { Header } from \"./Header\";\nimport { Title } from \"./Title\";\nimport { DetailedPokemon } from \"./DetailedPokemon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [allPokemon, setAllPokemon] = useState([]); // State to store all Pokémon for filtering\n  const [filteredPokemon, setFilteredPokemon] = useState([]); // State to store filtered Pokémon based on search\n  const [detailedPokemon, setDetailedPokemon] = useState(null);\n\n  // Fetch a large list of Pokémon (names and URLs only)\n  async function getAllPokemon() {\n    const res = await fetch(\"https://pokeapi.co/api/v2/pokemon?limit=649\"); // Fetch a batch of Pokémon\n    const data = await res.json();\n    setAllPokemon(data.results); // Store basic Pokémon info (name and URL)\n    await getDetailedPokemon(data.results); // Fetch detailed info for all Pokémon\n  }\n\n  // Fetch detailed Pokémon data (ID, sprites, etc.) for filtered results\n  async function getDetailedPokemon(pokemonList) {\n    const detailedPokemonPromises = pokemonList.map(async poke => {\n      const res = await fetch(poke.url); // Fetch each Pokémon's detailed data using its URL\n      return res.json(); // Return detailed Pokémon data\n    });\n    const detailedPokemon = await Promise.all(detailedPokemonPromises); // Wait for all requests to complete\n    setFilteredPokemon(detailedPokemon); // Set detailed Pokémon data\n  }\n\n  // Handle form submission and filtering\n  function handleSubmit(event) {\n    event.preventDefault();\n    setDetailedPokemon(null);\n    const formData = new FormData(event.target); // Get form data\n    const searchTerm = formData.get(\"pokemon\").toLowerCase(); // Get the search term and make it lowercase for comparison\n\n    if (searchTerm) {\n      // Filter Pokémon whose name contains the search term\n      const filteredList = allPokemon.filter(poke => poke.name.toLowerCase().includes(searchTerm));\n      if (filteredList.length > 0) {\n        // If there are matching Pokémon, fetch their details\n        getDetailedPokemon(filteredList);\n      } else {\n        // If no matching Pokémon, show an alert\n        alert(\"There is no such Pokémon in our database!\");\n      }\n    } else {\n      // If no search term (empty search), show all Pokémon\n      getDetailedPokemon(allPokemon);\n    }\n  }\n  useEffect(() => {\n    getAllPokemon(); // Fetch the list of all Pokémon when the component mounts\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), detailedPokemon ?\n    /*#__PURE__*/\n    // Conditionally render DetailedPokemon or the search interface\n    _jsxDEV(DetailedPokemon, {\n      detailedPokemon: detailedPokemon,\n      pokemon: filteredPokemon,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Pokemon, {\n      pokemon: filteredPokemon,\n      handleSubmit: handleSubmit,\n      setDetailedPokemon: setDetailedPokemon,\n      detailedPokemon: detailedPokemon // Pass the setter function\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ljrGMU7xSk4+BAWW2yXu48n1Gsg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Pokemon","Header","Title","DetailedPokemon","jsxDEV","_jsxDEV","App","_s","allPokemon","setAllPokemon","filteredPokemon","setFilteredPokemon","detailedPokemon","setDetailedPokemon","getAllPokemon","res","fetch","data","json","results","getDetailedPokemon","pokemonList","detailedPokemonPromises","map","poke","url","Promise","all","handleSubmit","event","preventDefault","formData","FormData","target","searchTerm","get","toLowerCase","filteredList","filter","name","includes","length","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","pokemon","_c","$RefreshReg$"],"sources":["C:/Users/enzos/OneDrive/Ambiente de Trabalho/Breno/Github/pokedex-subvisual/src/components/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Pokemon } from \"./Pokemon\";\nimport { Header } from \"./Header\";\nimport { Title } from \"./Title\";\nimport { DetailedPokemon } from \"./DetailedPokemon\";\n\nfunction App() {\n  const [allPokemon, setAllPokemon] = useState([]); // State to store all Pokémon for filtering\n  const [filteredPokemon, setFilteredPokemon] = useState([]); // State to store filtered Pokémon based on search\n  const [detailedPokemon, setDetailedPokemon] = useState(null);\n\n  // Fetch a large list of Pokémon (names and URLs only)\n  async function getAllPokemon() {\n    const res = await fetch(\"https://pokeapi.co/api/v2/pokemon?limit=649\"); // Fetch a batch of Pokémon\n    const data = await res.json();\n    setAllPokemon(data.results); // Store basic Pokémon info (name and URL)\n    await getDetailedPokemon(data.results); // Fetch detailed info for all Pokémon\n  }\n\n  // Fetch detailed Pokémon data (ID, sprites, etc.) for filtered results\n  async function getDetailedPokemon(pokemonList) {\n    const detailedPokemonPromises = pokemonList.map(async (poke) => {\n      const res = await fetch(poke.url); // Fetch each Pokémon's detailed data using its URL\n      return res.json(); // Return detailed Pokémon data\n    });\n\n    const detailedPokemon = await Promise.all(detailedPokemonPromises); // Wait for all requests to complete\n    setFilteredPokemon(detailedPokemon); // Set detailed Pokémon data\n  }\n\n  // Handle form submission and filtering\n  function handleSubmit(event) {\n    event.preventDefault();\n    setDetailedPokemon(null);\n    const formData = new FormData(event.target); // Get form data\n    const searchTerm = formData.get(\"pokemon\").toLowerCase(); // Get the search term and make it lowercase for comparison\n\n    if (searchTerm) {\n      // Filter Pokémon whose name contains the search term\n      const filteredList = allPokemon.filter((poke) =>\n        poke.name.toLowerCase().includes(searchTerm)\n      );\n      if (filteredList.length > 0) {\n        // If there are matching Pokémon, fetch their details\n        getDetailedPokemon(filteredList);\n      } else {\n        // If no matching Pokémon, show an alert\n        alert(\"There is no such Pokémon in our database!\");\n      }\n    } else {\n      // If no search term (empty search), show all Pokémon\n      getDetailedPokemon(allPokemon);\n    }\n  }\n\n  useEffect(() => {\n    getAllPokemon(); // Fetch the list of all Pokémon when the component mounts\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Title></Title>\n      {detailedPokemon ? ( // Conditionally render DetailedPokemon or the search interface\n        <DetailedPokemon\n          detailedPokemon={detailedPokemon}\n          pokemon={filteredPokemon}\n          handleSubmit={handleSubmit}\n        />\n      ) : (\n        <Pokemon\n          pokemon={filteredPokemon}\n          handleSubmit={handleSubmit}\n          setDetailedPokemon={setDetailedPokemon}\n          detailedPokemon={detailedPokemon} // Pass the setter function\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}