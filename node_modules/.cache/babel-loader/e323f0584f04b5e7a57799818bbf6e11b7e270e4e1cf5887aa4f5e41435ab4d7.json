{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\enzos\\\\OneDrive\\\\Ambiente de Trabalho\\\\Breno\\\\Github\\\\challenge-pokedex-subvisual\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { Pokemon } from \"./Pokemon\";\nimport { Header } from \"./Header\";\nimport { Title } from \"./Title\";\nimport { DetailedPokemon } from \"./DetailedPokemon\";\nimport { Footer } from \"./Footer\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // States\n  const [allPokemon, setAllPokemon] = useState([]); // State to store all Pokémon for filtering\n  const [loading, setLoading] = useState(false); // State to store\n  const [filteredPokemon, setFilteredPokemon] = useState([]); // State to store filtered Pokémon based on search\n  const [detailedPokemon, setDetailedPokemon] = useState(null); // State to store more detailed Pokemon information\n  const [currentIndex, setCurrentIndex] = useState(0); // State to store the current index for filtering Pokemon\n  const [currentPage, setCurrentPage] = useState(1); // State to store the current page for paginatio\n  const [pokemonPerPage, setPokemonPerPage] = useState(30); // State to store the number of Pokémon per pages\n  const [music, setMusic] = useState(true); // Music state\n\n  const audioRef = useRef(null); // Use ref to persist the audio object\n\n  const lastPokemonIndex = currentPage * pokemonPerPage;\n  const firstPokemonIndex = lastPokemonIndex - pokemonPerPage;\n  const currentPokemon = filteredPokemon.slice(firstPokemonIndex, lastPokemonIndex);\n\n  // Functions\n  // Function to play or pause music\n  function playMusic() {\n    if (music) {\n      if (audioRef.current) {\n        audioRef.current.play().catch(error => {\n          console.error(\"Error playing audio:\", error);\n        });\n      }\n    } else {\n      if (audioRef.current) {\n        audioRef.current.pause(); // Pause the audio\n      }\n    }\n  }\n  function controlMusic() {\n    setMusic(prevMusic => !prevMusic); // Toggle the music state\n  }\n\n  // Fetch a large list of Pokémon (names and URLs only)\n  async function getAllPokemon() {\n    setLoading(true);\n    const res = await fetch(\"https://pokeapi.co/api/v2/pokemon?limit=649\"); // Fetch a batch of Pokémon\n    const data = await res.json();\n    setAllPokemon(data.results); // Store basic Pokémon info (name and URL)\n    await getDetailedPokemon(data.results); // Fetch detailed info for all Pokémon\n    setLoading(false);\n  }\n\n  // Fetch detailed Pokémon data (ID, sprites, etc.) for filtered results\n  async function getDetailedPokemon(pokemonList) {\n    const detailedPokemonPromises = pokemonList.map(async poke => {\n      const res = await fetch(poke.url); // Fetch each Pokémon's detailed data using its URL\n      return res.json(); // Return detailed Pokémon data\n    });\n    const detailedPokemon = await Promise.all(detailedPokemonPromises); // Wait for all requests to complete\n    setFilteredPokemon(detailedPokemon); // Set detailed Pokémon data\n  }\n\n  // Handle form submission and filtering\n  async function handleSubmit(event) {\n    event.preventDefault();\n    await setDetailedPokemon(null);\n    const formData = new FormData(event.target); // Get form data\n    const searchTerm = formData.get(\"pokemon\").toLowerCase(); // Get the search term and make it lowercase for comparison\n\n    if (searchTerm) {\n      // Filter Pokémon whose name contains the search term\n      const filteredList = allPokemon.filter(poke => poke.name.toLowerCase().includes(searchTerm));\n      if (filteredList.length > 0) {\n        // If there are matching Pokémon, fetch their details\n        await getDetailedPokemon(filteredList);\n      } else {\n        // If no matching Pokémon, show an alert\n        alert(\"There is no such Pokémon in our database!\");\n      }\n    } else {\n      // If no search term (empty search), show all Pokémon\n      await getDetailedPokemon(allPokemon);\n    }\n  }\n\n  // Function to go to the next Pokémon\n  const nextPokemon = async () => {\n    if (currentIndex < filteredPokemon.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n      setDetailedPokemon(filteredPokemon[currentIndex + 1]);\n    }\n  };\n\n  // Function to go to the previous Pokémon\n  const previousPokemon = async () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n      setDetailedPokemon(filteredPokemon[currentIndex - 1]);\n    }\n  };\n\n  // Function to handle change page event\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  useEffect(() => {\n    audioRef.current = new Audio(\"/music.mp3\"); // Initialize the audio object only once\n    audioRef.current.loop = true; // Set to loop the music\n    playMusic(); // Call the function to play or stop music depending on initial state\n    getAllPokemon(); // Fetch the list of all Pokémon when the component mounts\n  }, []);\n\n  // Effect to handle changes in the music state\n  useEffect(() => {\n    playMusic(); // Play or pause music when the 'music' state changes\n  }, [music]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      controlMusic: controlMusic,\n      music: music\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), detailedPokemon ?\n    /*#__PURE__*/\n    // Conditionally render DetailedPokemon or the search interface\n    _jsxDEV(DetailedPokemon, {\n      detailedPokemon: detailedPokemon,\n      pokemon: filteredPokemon,\n      handleSubmit: handleSubmit,\n      nextPokemon: nextPokemon,\n      previousPokemon: previousPokemon,\n      currentIndex: currentIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Pokemon, {\n        pokemon: currentPokemon,\n        handleSubmit: handleSubmit,\n        setDetailedPokemon: setDetailedPokemon,\n        detailedPokemon: detailedPokemon // Pass the setter function\n        ,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        pokemonPerPage: pokemonPerPage,\n        totalPokemon: filteredPokemon.length,\n        paginate: paginate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"L1QCW4saS9EmpPBOUZJPQSqMYX0=\");\n_c = App;\nfunction Pagination({\n  pokemonPerPage,\n  totalPokemon,\n  paginate\n}) {\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalPokemon / pokemonPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      style: {\n        justifyContent: \"center\",\n        marginTop: 20\n      },\n      children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"page-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          style: {\n            color: \"black\"\n          },\n          href: \"!#\",\n          className: \"page-link\",\n          onClick: () => paginate(number),\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Pagination;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Pagination\");","map":{"version":3,"names":["useState","useEffect","useRef","Pokemon","Header","Title","DetailedPokemon","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","allPokemon","setAllPokemon","loading","setLoading","filteredPokemon","setFilteredPokemon","detailedPokemon","setDetailedPokemon","currentIndex","setCurrentIndex","currentPage","setCurrentPage","pokemonPerPage","setPokemonPerPage","music","setMusic","audioRef","lastPokemonIndex","firstPokemonIndex","currentPokemon","slice","playMusic","current","play","catch","error","console","pause","controlMusic","prevMusic","getAllPokemon","res","fetch","data","json","results","getDetailedPokemon","pokemonList","detailedPokemonPromises","map","poke","url","Promise","all","handleSubmit","event","preventDefault","formData","FormData","target","searchTerm","get","toLowerCase","filteredList","filter","name","includes","length","alert","nextPokemon","previousPokemon","paginate","pageNumber","Audio","loop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","pokemon","Pagination","totalPokemon","_c","pageNumbers","i","Math","ceil","push","style","justifyContent","marginTop","number","color","href","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/enzos/OneDrive/Ambiente de Trabalho/Breno/Github/challenge-pokedex-subvisual/src/components/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { Pokemon } from \"./Pokemon\";\nimport { Header } from \"./Header\";\nimport { Title } from \"./Title\";\nimport { DetailedPokemon } from \"./DetailedPokemon\";\nimport { Footer } from \"./Footer\";\n\nfunction App() {\n  // States\n  const [allPokemon, setAllPokemon] = useState([]); // State to store all Pokémon for filtering\n  const [loading, setLoading] = useState(false); // State to store\n  const [filteredPokemon, setFilteredPokemon] = useState([]); // State to store filtered Pokémon based on search\n  const [detailedPokemon, setDetailedPokemon] = useState(null); // State to store more detailed Pokemon information\n  const [currentIndex, setCurrentIndex] = useState(0); // State to store the current index for filtering Pokemon\n  const [currentPage, setCurrentPage] = useState(1); // State to store the current page for paginatio\n  const [pokemonPerPage, setPokemonPerPage] = useState(30); // State to store the number of Pokémon per pages\n  const [music, setMusic] = useState(true); // Music state\n\n  const audioRef = useRef(null); // Use ref to persist the audio object\n\n  const lastPokemonIndex = currentPage * pokemonPerPage;\n  const firstPokemonIndex = lastPokemonIndex - pokemonPerPage;\n  const currentPokemon = filteredPokemon.slice(\n    firstPokemonIndex,\n    lastPokemonIndex\n  );\n\n  // Functions\n  // Function to play or pause music\n  function playMusic() {\n    if (music) {\n      if (audioRef.current) {\n        audioRef.current.play().catch((error) => {\n          console.error(\"Error playing audio:\", error);\n        });\n      }\n    } else {\n      if (audioRef.current) {\n        audioRef.current.pause(); // Pause the audio\n      }\n    }\n  }\n\n  function controlMusic() {\n    setMusic((prevMusic) => !prevMusic); // Toggle the music state\n  }\n\n  // Fetch a large list of Pokémon (names and URLs only)\n  async function getAllPokemon() {\n    setLoading(true);\n    const res = await fetch(\"https://pokeapi.co/api/v2/pokemon?limit=649\"); // Fetch a batch of Pokémon\n    const data = await res.json();\n    setAllPokemon(data.results); // Store basic Pokémon info (name and URL)\n    await getDetailedPokemon(data.results); // Fetch detailed info for all Pokémon\n    setLoading(false);\n  }\n\n  // Fetch detailed Pokémon data (ID, sprites, etc.) for filtered results\n  async function getDetailedPokemon(pokemonList) {\n    const detailedPokemonPromises = pokemonList.map(async (poke) => {\n      const res = await fetch(poke.url); // Fetch each Pokémon's detailed data using its URL\n      return res.json(); // Return detailed Pokémon data\n    });\n\n    const detailedPokemon = await Promise.all(detailedPokemonPromises); // Wait for all requests to complete\n    setFilteredPokemon(detailedPokemon); // Set detailed Pokémon data\n  }\n\n  // Handle form submission and filtering\n  async function handleSubmit(event) {\n    event.preventDefault();\n    await setDetailedPokemon(null);\n    const formData = new FormData(event.target); // Get form data\n    const searchTerm = formData.get(\"pokemon\").toLowerCase(); // Get the search term and make it lowercase for comparison\n\n    if (searchTerm) {\n      // Filter Pokémon whose name contains the search term\n      const filteredList = allPokemon.filter((poke) =>\n        poke.name.toLowerCase().includes(searchTerm)\n      );\n      if (filteredList.length > 0) {\n        // If there are matching Pokémon, fetch their details\n        await getDetailedPokemon(filteredList);\n      } else {\n        // If no matching Pokémon, show an alert\n        alert(\"There is no such Pokémon in our database!\");\n      }\n    } else {\n      // If no search term (empty search), show all Pokémon\n      await getDetailedPokemon(allPokemon);\n    }\n  }\n\n  // Function to go to the next Pokémon\n  const nextPokemon = async () => {\n    if (currentIndex < filteredPokemon.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n      setDetailedPokemon(filteredPokemon[currentIndex + 1]);\n    }\n  };\n\n  // Function to go to the previous Pokémon\n  const previousPokemon = async () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n      setDetailedPokemon(filteredPokemon[currentIndex - 1]);\n    }\n  };\n\n  // Function to handle change page event\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  useEffect(() => {\n    audioRef.current = new Audio(\"/music.mp3\"); // Initialize the audio object only once\n    audioRef.current.loop = true; // Set to loop the music\n    playMusic(); // Call the function to play or stop music depending on initial state\n    getAllPokemon(); // Fetch the list of all Pokémon when the component mounts\n  }, []);\n\n  // Effect to handle changes in the music state\n  useEffect(() => {\n    playMusic(); // Play or pause music when the 'music' state changes\n  }, [music]);\n\n  return (\n    <div className=\"App\">\n      <Header controlMusic={controlMusic} music={music}></Header>\n      <Title></Title>\n      {detailedPokemon ? ( // Conditionally render DetailedPokemon or the search interface\n        <DetailedPokemon\n          detailedPokemon={detailedPokemon}\n          pokemon={filteredPokemon}\n          handleSubmit={handleSubmit}\n          nextPokemon={nextPokemon}\n          previousPokemon={previousPokemon}\n          currentIndex={currentIndex}\n        />\n      ) : (\n        <>\n          <Pokemon\n            pokemon={currentPokemon}\n            handleSubmit={handleSubmit}\n            setDetailedPokemon={setDetailedPokemon}\n            detailedPokemon={detailedPokemon} // Pass the setter function\n            loading={loading}\n          />\n          <Pagination\n            pokemonPerPage={pokemonPerPage}\n            totalPokemon={filteredPokemon.length}\n            paginate={paginate}\n          ></Pagination>\n        </>\n      )}\n\n      <Footer></Footer>\n    </div>\n  );\n}\n\nfunction Pagination({ pokemonPerPage, totalPokemon, paginate }) {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPokemon / pokemonPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul\n        className=\"pagination\"\n        style={{ justifyContent: \"center\", marginTop: 20 }}\n      >\n        {pageNumbers.map((number) => (\n          <li key={number} className={\"page-item\"}>\n            <a\n              style={{ color: \"black\" }}\n              href=\"!#\"\n              className=\"page-link\"\n              onClick={() => paginate(number)}\n            >\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}