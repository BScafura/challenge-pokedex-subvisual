{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\enzos\\\\OneDrive\\\\Ambiente de Trabalho\\\\Breno\\\\Github\\\\challenge-pokedex-subvisual\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { Pokemon } from \"./Pokemon\";\nimport { Header } from \"./Header\";\nimport { Title } from \"./Title\";\nimport { DetailedPokemon } from \"./DetailedPokemon\";\nimport { Footer } from \"./Footer\";\nimport { Pagination } from \"./Pagination\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // States\n  const [allPokemon, setAllPokemon] = useState([]); // State to store all Pokémon for filtering\n  const [loading, setLoading] = useState(false); // State to store\n  const [filteredPokemon, setFilteredPokemon] = useState([]); // State to store filtered Pokémon based on search\n  const [detailedPokemon, setDetailedPokemon] = useState(null); // State to store more detailed Pokemon information\n  const [currentGlobalIndex, setCurrentGlobalIndex] = useState(0); // Global index for allPokemon\n  const [currentIndex, setCurrentIndex] = useState(0); // State to store the current index for filtering Pokemon\n  const [currentPage, setCurrentPage] = useState(1); // State to store the current page for paginatio\n  const [pokemonPerPage, setPokemonPerPage] = useState(30); // State to store the number of Pokémon per pages\n  const [music, setMusic] = useState(true); // Music state\n\n  const audioRef = useRef(null); // Use ref to persist the audio object\n\n  const lastPokemonIndex = currentPage * pokemonPerPage;\n  const firstPokemonIndex = lastPokemonIndex - pokemonPerPage;\n  const currentPokemon = filteredPokemon.slice(firstPokemonIndex, lastPokemonIndex);\n\n  // Functions\n  // Function to play or pause music\n  function playMusic() {\n    if (music) {\n      if (audioRef.current) {\n        audioRef.current.play().catch(error => {\n          console.error(\"Error playing audio:\", error);\n        });\n      }\n    } else {\n      if (audioRef.current) {\n        audioRef.current.pause(); // Pause the audio\n      }\n    }\n  }\n  function controlMusic() {\n    setMusic(prevMusic => {\n      const newMusicState = !prevMusic;\n      if (newMusicState) {\n        audioRef.current.play().catch(error => {\n          console.error(\"Error playing audio:\", error);\n        });\n      } else {\n        audioRef.current.pause();\n      }\n      return newMusicState;\n    });\n  }\n\n  // Fetch a large list of Pokémon (names and URLs only)\n  async function getAllPokemon() {\n    setLoading(true);\n    const res = await fetch(\"https://pokeapi.co/api/v2/pokemon?limit=649\"); // Fetch a batch of Pokémon\n    const data = await res.json();\n    setAllPokemon(data.results); // Store basic Pokémon info (name and URL)\n    await getDetailedPokemon(data.results); // Fetch detailed info for all Pokémon\n    setLoading(false);\n  }\n\n  // Fetch detailed Pokémon data (ID, sprites, etc.) for filtered results\n  async function getDetailedPokemon(pokemonList) {\n    const detailedPokemonPromises = pokemonList.map(async poke => {\n      const res = await fetch(poke.url); // Fetch each Pokémon's detailed data using its URL\n      return res.json(); // Return detailed Pokémon data\n    });\n    const detailedPokemon = await Promise.all(detailedPokemonPromises); // Wait for all requests to complete\n    setFilteredPokemon(detailedPokemon); // Set detailed Pokémon data\n  }\n\n  // Handle form submission and filtering\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const searchTerm = formData.get(\"pokemon\").toLowerCase();\n    const foundPokemon = allPokemon.find(poke => poke.name.toLowerCase() === searchTerm);\n    if (foundPokemon) {\n      const pokemonDetails = await fetchPokemonDetails(foundPokemon.url);\n      setDetailedPokemon(pokemonDetails);\n\n      // Update the global index to the searched Pokémon's position in the list\n      const foundIndex = allPokemon.findIndex(poke => poke.name === foundPokemon.name);\n      setCurrentGlobalIndex(foundIndex);\n    } else {\n      alert(\"There is no such Pokémon in our database!\");\n    }\n  };\n\n  // Function to go to the next Pokémon\n  const nextPokemon = async () => {\n    if (currentGlobalIndex < allPokemon.length - 1) {\n      const nextIndex = currentGlobalIndex + 1;\n      setCurrentGlobalIndex(nextIndex);\n      const nextPokemonDetails = await fetchPokemonDetails(allPokemon[nextIndex].url); // Fetch details using the global dataset\n      setDetailedPokemon(nextPokemonDetails);\n    }\n  };\n\n  // Function to go to the previous Pokémon\n  const previousPokemon = async () => {\n    if (currentGlobalIndex > 0) {\n      const prevIndex = currentGlobalIndex - 1;\n      setCurrentGlobalIndex(prevIndex);\n      const prevPokemonDetails = await fetchPokemonDetails(allPokemon[prevIndex].url);\n      setDetailedPokemon(prevPokemonDetails);\n    }\n  };\n\n  // Function to fetch Pokémon details by URL\n  const fetchPokemonDetails = async url => {\n    const res = await fetch(url);\n    return await res.json();\n  };\n\n  // Function to handle change page event\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  useEffect(() => {\n    audioRef.current = new Audio(\"/music.mp3\"); // Initialize the audio object only once\n    audioRef.current.loop = true; // Set to loop the music\n\n    // Start playing music immediately if the initial state is true\n    if (music) {\n      audioRef.current.play().catch(error => {\n        console.error(\"Error playing audio on mount:\", error);\n      });\n    }\n    getAllPokemon(); // Fetch the list of all Pokémon when the component mounts\n\n    // Clean up the audio when the component unmounts\n    return () => {\n      if (audioRef.current) {\n        audioRef.current.pause();\n        audioRef.current = null;\n      }\n    };\n  }, []);\n\n  // Effect to handle changes in the music state\n  useEffect(() => {\n    playMusic(); // Play or pause music when the 'music' state changes\n  }, [music]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      controlMusic: controlMusic,\n      music: music\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), detailedPokemon ?\n    /*#__PURE__*/\n    // Conditionally render DetailedPokemon or the search interface\n    _jsxDEV(DetailedPokemon, {\n      detailedPokemon: detailedPokemon,\n      pokemon: allPokemon,\n      handleSubmit: handleSubmit,\n      nextPokemon: nextPokemon,\n      previousPokemon: previousPokemon,\n      currentIndex: currentGlobalIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Pokemon, {\n        pokemon: currentPokemon,\n        handleSubmit: handleSubmit,\n        setDetailedPokemon: setDetailedPokemon,\n        detailedPokemon: detailedPokemon // Pass the setter function\n        ,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        pokemonPerPage: pokemonPerPage,\n        totalPokemon: filteredPokemon.length,\n        paginate: paginate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XKx6zV4FMWCPKDK/eruYd9xzy4w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","Pokemon","Header","Title","DetailedPokemon","Footer","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","allPokemon","setAllPokemon","loading","setLoading","filteredPokemon","setFilteredPokemon","detailedPokemon","setDetailedPokemon","currentGlobalIndex","setCurrentGlobalIndex","currentIndex","setCurrentIndex","currentPage","setCurrentPage","pokemonPerPage","setPokemonPerPage","music","setMusic","audioRef","lastPokemonIndex","firstPokemonIndex","currentPokemon","slice","playMusic","current","play","catch","error","console","pause","controlMusic","prevMusic","newMusicState","getAllPokemon","res","fetch","data","json","results","getDetailedPokemon","pokemonList","detailedPokemonPromises","map","poke","url","Promise","all","handleSubmit","event","preventDefault","formData","FormData","target","searchTerm","get","toLowerCase","foundPokemon","find","name","pokemonDetails","fetchPokemonDetails","foundIndex","findIndex","alert","nextPokemon","length","nextIndex","nextPokemonDetails","previousPokemon","prevIndex","prevPokemonDetails","paginate","pageNumber","Audio","loop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","pokemon","totalPokemon","_c","$RefreshReg$"],"sources":["C:/Users/enzos/OneDrive/Ambiente de Trabalho/Breno/Github/challenge-pokedex-subvisual/src/components/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { Pokemon } from \"./Pokemon\";\nimport { Header } from \"./Header\";\nimport { Title } from \"./Title\";\nimport { DetailedPokemon } from \"./DetailedPokemon\";\nimport { Footer } from \"./Footer\";\nimport { Pagination } from \"./Pagination\";\n\nfunction App() {\n  // States\n  const [allPokemon, setAllPokemon] = useState([]); // State to store all Pokémon for filtering\n  const [loading, setLoading] = useState(false); // State to store\n  const [filteredPokemon, setFilteredPokemon] = useState([]); // State to store filtered Pokémon based on search\n  const [detailedPokemon, setDetailedPokemon] = useState(null); // State to store more detailed Pokemon information\n  const [currentGlobalIndex, setCurrentGlobalIndex] = useState(0); // Global index for allPokemon\n  const [currentIndex, setCurrentIndex] = useState(0); // State to store the current index for filtering Pokemon\n  const [currentPage, setCurrentPage] = useState(1); // State to store the current page for paginatio\n  const [pokemonPerPage, setPokemonPerPage] = useState(30); // State to store the number of Pokémon per pages\n  const [music, setMusic] = useState(true); // Music state\n\n  const audioRef = useRef(null); // Use ref to persist the audio object\n\n  const lastPokemonIndex = currentPage * pokemonPerPage;\n  const firstPokemonIndex = lastPokemonIndex - pokemonPerPage;\n  const currentPokemon = filteredPokemon.slice(\n    firstPokemonIndex,\n    lastPokemonIndex\n  );\n\n  // Functions\n  // Function to play or pause music\n  function playMusic() {\n    if (music) {\n      if (audioRef.current) {\n        audioRef.current.play().catch((error) => {\n          console.error(\"Error playing audio:\", error);\n        });\n      }\n    } else {\n      if (audioRef.current) {\n        audioRef.current.pause(); // Pause the audio\n      }\n    }\n  }\n\n  function controlMusic() {\n    setMusic((prevMusic) => {\n      const newMusicState = !prevMusic;\n      if (newMusicState) {\n        audioRef.current.play().catch((error) => {\n          console.error(\"Error playing audio:\", error);\n        });\n      } else {\n        audioRef.current.pause();\n      }\n      return newMusicState;\n    });\n  }\n\n  // Fetch a large list of Pokémon (names and URLs only)\n  async function getAllPokemon() {\n    setLoading(true);\n    const res = await fetch(\"https://pokeapi.co/api/v2/pokemon?limit=649\"); // Fetch a batch of Pokémon\n    const data = await res.json();\n    setAllPokemon(data.results); // Store basic Pokémon info (name and URL)\n    await getDetailedPokemon(data.results); // Fetch detailed info for all Pokémon\n    setLoading(false);\n  }\n\n  // Fetch detailed Pokémon data (ID, sprites, etc.) for filtered results\n  async function getDetailedPokemon(pokemonList) {\n    const detailedPokemonPromises = pokemonList.map(async (poke) => {\n      const res = await fetch(poke.url); // Fetch each Pokémon's detailed data using its URL\n      return res.json(); // Return detailed Pokémon data\n    });\n\n    const detailedPokemon = await Promise.all(detailedPokemonPromises); // Wait for all requests to complete\n    setFilteredPokemon(detailedPokemon); // Set detailed Pokémon data\n  }\n\n  // Handle form submission and filtering\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const searchTerm = formData.get(\"pokemon\").toLowerCase();\n\n    const foundPokemon = allPokemon.find(\n      (poke) => poke.name.toLowerCase() === searchTerm\n    );\n\n    if (foundPokemon) {\n      const pokemonDetails = await fetchPokemonDetails(foundPokemon.url);\n      setDetailedPokemon(pokemonDetails);\n\n      // Update the global index to the searched Pokémon's position in the list\n      const foundIndex = allPokemon.findIndex(\n        (poke) => poke.name === foundPokemon.name\n      );\n      setCurrentGlobalIndex(foundIndex);\n    } else {\n      alert(\"There is no such Pokémon in our database!\");\n    }\n  };\n\n  // Function to go to the next Pokémon\n  const nextPokemon = async () => {\n    if (currentGlobalIndex < allPokemon.length - 1) {\n      const nextIndex = currentGlobalIndex + 1;\n      setCurrentGlobalIndex(nextIndex);\n      const nextPokemonDetails = await fetchPokemonDetails(\n        allPokemon[nextIndex].url\n      ); // Fetch details using the global dataset\n      setDetailedPokemon(nextPokemonDetails);\n    }\n  };\n\n  // Function to go to the previous Pokémon\n  const previousPokemon = async () => {\n    if (currentGlobalIndex > 0) {\n      const prevIndex = currentGlobalIndex - 1;\n      setCurrentGlobalIndex(prevIndex);\n      const prevPokemonDetails = await fetchPokemonDetails(\n        allPokemon[prevIndex].url\n      );\n      setDetailedPokemon(prevPokemonDetails);\n    }\n  };\n\n  // Function to fetch Pokémon details by URL\n  const fetchPokemonDetails = async (url) => {\n    const res = await fetch(url);\n    return await res.json();\n  };\n\n  // Function to handle change page event\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  useEffect(() => {\n    audioRef.current = new Audio(\"/music.mp3\"); // Initialize the audio object only once\n    audioRef.current.loop = true; // Set to loop the music\n\n    // Start playing music immediately if the initial state is true\n    if (music) {\n      audioRef.current.play().catch((error) => {\n        console.error(\"Error playing audio on mount:\", error);\n      });\n    }\n\n    getAllPokemon(); // Fetch the list of all Pokémon when the component mounts\n\n    // Clean up the audio when the component unmounts\n    return () => {\n      if (audioRef.current) {\n        audioRef.current.pause();\n        audioRef.current = null;\n      }\n    };\n  }, []);\n\n  // Effect to handle changes in the music state\n  useEffect(() => {\n    playMusic(); // Play or pause music when the 'music' state changes\n  }, [music]);\n\n  return (\n    <div className=\"App\">\n      <Header controlMusic={controlMusic} music={music}></Header>\n      <Title></Title>\n      {detailedPokemon ? ( // Conditionally render DetailedPokemon or the search interface\n        <DetailedPokemon\n          detailedPokemon={detailedPokemon}\n          pokemon={allPokemon}\n          handleSubmit={handleSubmit}\n          nextPokemon={nextPokemon}\n          previousPokemon={previousPokemon}\n          currentIndex={currentGlobalIndex}\n        />\n      ) : (\n        <>\n          <Pokemon\n            pokemon={currentPokemon}\n            handleSubmit={handleSubmit}\n            setDetailedPokemon={setDetailedPokemon}\n            detailedPokemon={detailedPokemon} // Pass the setter function\n            loading={loading}\n          />\n          <Pagination\n            pokemonPerPage={pokemonPerPage}\n            totalPokemon={filteredPokemon.length}\n            paginate={paginate}\n          ></Pagination>\n        </>\n      )}\n\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}